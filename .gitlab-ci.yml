stages:
 - build
 - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive

android:
  stage: build
  image: kazade/android-sdk
  allow_failure: true
  script:
   - mkdir ${CI_PROJECT_DIR}/build

   # Download SDL and OpenAL-soft
   - cd ${CI_PROJECT_DIR}/platforms/android
   - python prepare.py

   # Build SDL
   - mkdir -p .android/sdl/build/jni
   - cd .android/sdl/build/jni
   - ln -s ../../Android.mk
   - ln -s ../../src
   - ln -s ../../include
   - cd ..
   - export APP_PLATFORM=android-18
   - NDK_PROJECT_PATH=. ndk-build
   # Return to our build directory
   - cd ${CI_PROJECT_DIR}/build
   - cmake -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=armeabi-v7a ..
   - make

build:windows-x64-mingw:
  stage: build
  image: fedora:28
  before_script:
   - dnf install -y mingw64-gcc-c++ mingw64-SDL2 mingw64-openal-soft mingw64-zlib cmake make gcc-c++ python
  variables:
    MINGW_BIN_DIR: /usr/x86_64-w64-mingw32/sys-root/mingw/bin/
  script:
   - mkdir build-debug
   - cd build-debug
   - mingw64-cmake -DCMAKE_BUILD_TYPE=Debug -DSIMULANT_BUILD_SAMPLES=OFF ..
   - make -j3
   - cp $MINGW_BIN_DIR/zlib1.dll tests/
   - cp $MINGW_BIN_DIR/SDL2.dll tests/
   - cp $MINGW_BIN_DIR/libgcc_s_seh-1.dll tests/
   - cp $MINGW_BIN_DIR/libstdc++-6.dll tests/
   - cp $MINGW_BIN_DIR/libwinpthread-1.dll tests/
   - cd ..
   - mkdir build-release
   - cd build-release
   - mingw64-cmake -DCMAKE_BUILD_TYPE=Release -DSIMULANT_BUILD_SAMPLES=OFF ..
   - make -j3
  artifacts:
    paths:
      - build-debug/simulant/
      - build-debug/sample_data/
      - build-debug/tests/simulant_tests.exe
      - build-debug/tests/*.dll

test:windows-x64-mingw:
  stage: test
  image: fedora:28
  allow_failure: true
  dependencies:
   - build:windows-x64-mingw
  before_script:
   - dnf install -y wine winetricks xorg-x11-server-Xvfb xorg-x11-drv-dummy dpkg
   - start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 640x480x24 -ac +extension RANDR +extension GLX +render
   - sleep 3
   - export LIBGL_ALWAYS_SOFTWARE=1
  script:
   - cd build-debug
   - cp simulant/libsimulant.dll tests
   - DISPLAY=:99 wine tests/simulant_tests.exe

build:linux-x64-gcc:
  stage: build
  image: fedora:28
  before_script:
   - dnf install -y cmake make gcc-c++ python SDL2-devel openal-soft-devel zlib-devel mesa-libGL-devel
  script:
   - mkdir build-debug
   - cd build-debug
   - cmake -DCMAKE_BUILD_TYPE=Debug -DSIMULANT_BUILD_SAMPLES=OFF ..
   - make -j3
   - cd ..
   - mkdir build-release
   - cd build-release
   - cmake -DCMAKE_BUILD_TYPE=Release -DSIMULANT_BUILD_SAMPLES=OFF ..
   - make -j3
  artifacts:
    paths:
      - build-debug/simulant/
      - build-debug/sample_data/
      - build-debug/tests/simulant_tests

test:linux-x64-gcc:
  stage: test
  image: fedora:28
  dependencies:
   - build:linux-x64-gcc
  before_script:
   - dnf install -y SDL2 openal-soft mesa-libGL libstdc++
  script:
   - cd build-debug
   - env SEGFAULT_SIGNALS="abrt segv" LD_PRELOAD=/usr/lib64/libSegFault.so ./tests/simulant_tests

build:dreamcast-sh4-gcc:
  stage: build
  image: kazade/dreamcast-sdk
  script:
   - mkdir build-release
   - cd build-release
   - source /etc/bash.bashrc
   - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../toolchains/Dreamcast.cmake -DSIMULANT_BUILD_SAMPLES=OFF ..
   - make -j3
  artifacts:
    paths:
      - build-release/simulant/
      - build-release/sample_data/
      - build-release/tests/simulant_tests.elf

test:dreamcast-sh4-gcc:
  stage: test
  image: fedora:28
  allow_failure: true
  dependencies:
    - build:dreamcast-sh4-gcc
  before_script:
    - dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    - dnf install -y lxdream
  script:
    - cd build-release
    - lxdream -H -e tests/simulant_tests.elf

